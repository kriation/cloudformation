AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template instantiates a CodeBuild project to build a Jekyll site from
  a CodeCommit source, and deploy it to S3
Parameters:
  ProjectName:
    Type: String
    Description: Name of the CodeBuild project
  TargetS3BucketName:
    Type: String
  BuildImage:
    Type: String
    Description: The image tag or image digest that identifies the Docker image to use for this build project.
  SQSQueueArn:
    Type: String
    Description: Arn of SQS Queue
  SourceBranch:
    Type: String
    Description: Reference to build from https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html
Resources:
  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/codebuild/${ProjectName}'
  CodeBuildCacheS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Sub '${AWS::AccountId}-codebuild-cache'
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: codebuild-s3-jeykll
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogStream
                Resource: !GetAtt CodeBuildLogGroup.Arn
              -
                Effect: Allow
                Action: logs:PutLogEvents
                Resource: !Sub
                  - '${CodeBuildLogGroupArn}:log-stream:*'
                  - { CodeBuildLogGroupArn: !Select [0, !Split [':*', !GetAtt CodeBuildLogGroup.Arn ]]}
              -
                Effect: Allow
                Action: s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${TargetS3BucketName}/*'
              -
                Effect: Allow
                Action: codecommit:GitPull
                Resource:
                  Fn::ImportValue:
                    !Sub 'ARN-${ProjectName}'
              -
                Effect: Allow
                Action: sqs:SendMessage
                Resource: !Ref SQSQueueArn
              -
                Effect: Allow
                Action: s3:ListBucket
                Resource: !GetAtt CodeBuildCacheS3.Arn
              -
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub
                  - '${CodeBuildCacheS3Arn}/*'
                  - { CodeBuildCacheS3Arn: !GetAtt CodeBuildCacheS3.Arn }
      RoleName: codepipeline-role-jekyll
  JekyllSite:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: S3
        EncryptionDisabled: true
        Location: !Ref TargetS3BucketName
        Name: '/'
      Cache:
        Type: S3
        Location: !Ref CodeBuildCacheS3
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref BuildImage
      Source:
        Type: CODECOMMIT
        Location:
          Fn::ImportValue:
            !Sub 'RepoURL-${ProjectName}'
        GitCloneDepth: 1
      SourceVersion: !Ref SourceBranch
